{"version":3,"sources":["components/App.jsx","index.js"],"names":["peer","Peer","key","process","App","React","memo","console","log","useState","myId","setMyId","callId","setCallId","localVideo","useRef","remoteVideo","on","id","current","navigator","mediaDevices","getUserMedia","video","audio","then","localStream","srcObject","mediaConnection","answer","stream","a","width","autoPlay","muted","playsInline","ref","value","onChange","e","target","onClick","call","play","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGMA,EAAO,I,OAAIC,GAAK,CAAEC,IAAKC,yCAwDdC,EAvDHC,IAAMC,MAChB,WAEEC,QAAQC,IAAI,aAFT,MAGqBC,mBAAS,IAH9B,mBAGIC,EAHJ,KAGUC,EAHV,OAIyBF,mBAAS,IAJlC,mBAIIG,EAJJ,KAIYC,EAJZ,KAKGC,EAAaC,iBAAO,MACpBC,EAAcD,iBAAO,MAC3Bf,EAAKiB,GAAG,QAAQ,WACdV,QAAQC,IAAI,WACZG,EAAQX,EAAKkB,IACbX,QAAQC,IAAI,qBAAsBM,GACP,OAAvBA,EAAWK,SACbC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAAQC,MAAK,SAAAC,GACrEZ,EAAWK,QAAQQ,UAAYD,QAKrC1B,EAAKiB,GAAG,QAAQ,SAAAW,GACdrB,QAAQC,IAAI,cACe,OAAvBM,EAAWK,UACbS,EAAgBC,OAAOf,EAAWK,QAAQQ,WAE1CC,EAAgBX,GAAG,SAAnB,uCAA6B,WAAMa,GAAN,SAAAC,EAAA,sDAC3Bf,EAAYG,QAAQQ,UAAYG,EADL,2CAA7B,2DAgBJ,OADAvB,QAAQC,IAAI,iBAEV,6BACE,4CACA,6BAAK,2BAAOwB,MAAM,QAAQC,UAAQ,EAACC,OAAK,EAACC,aAAW,EAACC,IAAKtB,KAC1D,6BAAMJ,GACN,6BACE,2BAAO2B,MAAOzB,EAAQ0B,SAAU,SAAAC,GAAC,OAAI1B,EAAU0B,EAAEC,OAAOH,UACxD,4BAAQI,QAjBG,WACflC,QAAQC,IAAI,aACZD,QAAQC,IAAI,QAASR,GACGA,EAAK0C,KAAK9B,EAAQE,EAAWK,QAAQQ,WAC7CV,GAAG,SAAnB,uCAA6B,WAAMa,GAAN,SAAAC,EAAA,6DAC3Bf,EAAYG,QAAQQ,UAAYG,EADL,SAErBd,EAAYG,QAAQwB,OAAOC,MAAMrC,QAAQsC,OAFpB,2CAA7B,yDAaI,iBAEF,6BAAK,2BAAOb,MAAM,QAAQC,UAAQ,EAACC,OAAK,EAACC,aAAW,EAACC,IAAKpB,QAG7D,ICpDL8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2302c907.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useRef } from 'react'\nimport Peer from 'skyway-js'\nconst peer = new Peer({ key: process.env.REACT_APP_SKYWAY_KEY })\nconst App = React.memo(\n  () =>{\n\n    console.log('start App');\n    const [myId, setMyId] = useState('')\n    const [callId, setCallId] = useState('')\n    const localVideo = useRef(null)\n    const remoteVideo = useRef(null)\n    peer.on('open', () => {\n      console.log('peer.on');\n      setMyId(peer.id)\n      console.log(\"before_localVideo=\", localVideo);\n      if (localVideo.current !== null) {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(localStream => {\n          localVideo.current.srcObject = localStream\n        })\n      }\n    })\n\n    peer.on('call', mediaConnection => {\n      console.log('start call');\n      if (localVideo.current !== null) {\n        mediaConnection.answer(localVideo.current.srcObject)\n\n        mediaConnection.on('stream', async stream => {\n          remoteVideo.current.srcObject = stream\n        })\n      }\n    })\n\n    const makeCall = () => {\n      console.log('make call');\n      console.log('peer ', peer);\n      const mediaConnection = peer.call(callId, localVideo.current.srcObject)\n      mediaConnection.on('stream', async stream => {\n        remoteVideo.current.srcObject = stream\n        await remoteVideo.current.play().catch(console.error)\n      })\n    }\n    console.log('start return ');\n    return (\n      <div>\n        <div>skyway test</div>\n        <div><video width=\"400px\" autoPlay muted playsInline ref={localVideo}></video></div>\n        <div>{myId}</div>\n        <div>\n          <input value={callId} onChange={e => setCallId(e.target.value)}></input>\n          <button onClick={makeCall}>発信</button>\n        </div>\n        <div><video width=\"400px\" autoPlay muted playsInline ref={remoteVideo}></video></div>\n      </div>\n    )\n  }, []\n);\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}